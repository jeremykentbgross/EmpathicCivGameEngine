Short Term
	-onidentifieduser vs onconnect
	-fix chat
	-player client/server + ping updates, ping resets on disconnect??

Long Term
	-port in 'project' c#/c++ code: rays, A*, tree improvements
	-port/inspire in 2k4-5 map code
	-Map:	//rework/Helper?
		-tileset class
		-tile class
		-prerender (opt phase?)
		-solid space
		-minimmo style editing//<=??
		-animated tiles
		-layered tiles

	-Particles (should be easy w/sprites)
	-Ai systems (as needed)
	-triggers (as needed)
	-event system sorting	//?main update becomes an event?/updater merge?/-event listener priorities
	-use registries to find display all gameobjects on client/server
	-postfix standalone + mailutils + nodemailer //??echo "I'm alive!" | mail -s "I'm alive!" me@mydomain.com
	-Serializable Commands (client can create some)/Test clients write to server (array) + create obj!
	-editor
	-ui lib/reflect ui (default into new tab)
	-audio
		-refactor
		-??QT: Sound listeners/sounds/events (ie triggers), aabb->spheres??
		-world audio
		-start/stop/virtual audio
		-material types (steps on what?)
		-placeholders work?
		-sound tree/priority/max channels/pause
	-triggers
	-GObject destruction listeners (have it?)
	-Physics
		-check collisions from multiple tree nodes??
		-debug print all collision per frame
		-phys broad, narrow, resolution (triggers)
	-game sysvars appname / page title
	-Zelda letters
	-style vs css classes in code
	-network
		-!net per object? ex: master map vs view?
	-npm
		-require(ecge)/new ecge();ecge.init(paths..);ecge.run();
	-input
		-button config
	AssetManagement
		-anims, etc
		-local storage
	Editor
		Main Win<-Controller->Editor Win
		Editor Win
			Class/Obj Tree
			Generic/Custom PropEditor
	?(exists?)Class create/destroy Listener
	?(exists?)Obj Dirty Listener


Incremental
	-documentation/cleanup	//+all TODO/todo/notes
	-rename everything with out 'game' in the name
	-rename GameRect to AABB2D, including instances
	-event namespaces + @fires
	-rename physics component to physics2D??
	-_this_, that -> aThis
	-GameEvent folder (so none are undocumented!)
	-search for 'onEvent' and make sure it is always passed event objects!
	-add/remove world/entity not events?
	-naming:	//obfuscation comb
		in/out
		returnXXX
		a/an
		my
		aThis
		...
	-notes engine/game


Expirimental
	-Support Map Wrapping, rotations, portals

Before Live
	-Need to change icon!!
	-Localization: //generally sort out
		-All Messages
		-Not messages
	-obfuscate checks
	-ie6 or fail msg's
	-Search for all (case insens) todo/note/temp/hack
	-update nodejs
	-use registries to find leaked gameobjects


Even During Live


Maybe/Maybenot Wishlist
	-Serializers	//-complete serializers/system!??
		-net ser
		-fs?
		-ui
		-Json serializer
	-Thread ai/physics/dom (main/render)
	-map prerender??
	-conversation trees json
	-Refactor components into systems??
	-timer centered update (precursor to webworkers)??
	-loading screen waiting on assetmanager
	-custom array funcs: push/pop_front/back


Possible optimisations:
	-Linux network opts:
		-TCP_NODELAY
		-TCP_QUICKACK
		-TCP_THIN_LINEAR_TIMEOUTS
		-TCP_THIN_DUPACK



