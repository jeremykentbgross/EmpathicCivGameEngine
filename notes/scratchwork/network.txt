see serializingStuff file also

-check socket support
-binary support in websockets!!!
http://dev.w3.org/html5/websockets/#dom-websocket-protocol
http://martinsikora.com/nodejs-and-websocket-simple-chat-tutorial
http://www.adobe.com/devnet/html5/articles/real-time-data-exchange-in-html5-with-websockets.html
http://stackoverflow.com/questions/12718970/javascript-typed-arrays-over-the-wire
https://developer.mozilla.org/en-US/docs/JavaScript/Typed_arrays/ArrayBuffer

-socket.io driver
-websocket driver


Finish networking
-who can create
-ping (later? Phys predic?)
-callbacks
-deletes

GameNetwork
	-client/Server
	-main bit...


user
	name : guest	//observer
	access : no
user
	name : server
	access : all
user
	name : expected123
	access : expected123
	if(discon > timeout)
		rm?
	else
		relink
		
ping?

GO
	netowner

unpack
	throw	//from logerror



/////////////////////////////////////////
/////////////////////////////////////////

GameInstance.localUser =
{
	name : isServer ? "Server" : int.random().toString();
}


//client side
OnConnect()
	send: 'userID', GameInstance.localUser.name;
	socket.user = new User("server");



//server side:
GameInstance.expectedUsers //sent from login or other server(s)
	
OnUserID(id)
{
	if(Globals.expectedOnlyList)
	{
		if(!expected)
		{
			disconnect
			return;
		}
	}
	if(this.users[id] && this.users[id].socket)
	{
		//already connected error
		disconnect
		return;
	}
	if(this.users[id] === null)
		this.users[id] = new User(name);//contains ping etc
	
	this.users[id].socket = socket;
	socket.user = this.users[id];
}
	
OnDisconnect()
	socket.user.socket = null;
	
OnData/Msg()
	if(socket.user === null)
		drop em!
		
Serialize()
{
	for numObjects
		get object header
		find object
		if(object.owner === source || source === server)
			serialize
		else
			dummy serialize
			check recent owners
}

//TODO how to setowner

User
-name (reflect)
-publicid ("")
-privateid

Net err (wrong user, not identifird user)

Socketio use websockets or flash, no polling.

Ws.js

User.netiopolicy =
{
connect()
reconnect()
update()
//example: owned objs, world, visible in world, less frequent@distance, etc
}



======>Object netdirty, owner
//TODO skip objects we do not own (but queue owner changes in netserialize queue from object?)
//TODO serialize all objects on start




Network:
-delete objects
-need to cleanup/improve setting/clearing netdirty (object level + class/instance net lists)
-flags improvements
-net groups
-position in serializer is not using floats (still?)
-InstanceID [0-255 || 0-65535] with range check (net object ids)
-ping t->; <-t*; dt(*)
-throw error in bit packer, and encoder and class reading on bad data + disconnect
-rename netDirty to isNetDirty
-bitpacker flags for network (ie not always to text, typed arrays?)
-creates new objects too often in serializer/airthmetic/bit packer?
-much in client side network needs to be in network wrapping the client/server code
-GameBinarySerialier.js not finished
-configure socketio (to use flash or whatever etc), support strait websockets also!
-prediction?
--physics.setServerPosition?? (physics component needs cleaning)
--See Source Engine Prediction


TODO remove net flag from class, I don't think it is needed anymore?? eh, maybe??

New versions of libs! (maybe report bugs with node inspector)
Network CHECK ID RECIEVED FROM USER IS VALID OBJECT!!!!!!




http://stackoverflow.com/questions/3653065/get-local-ip-address-in-node-js
var os=require('os');
var ifaces=os.networkInterfaces();
for (var dev in ifaces) {
  var alias=0;
  ifaces[dev].forEach(function(details){
    if (details.family=='IPv4') {
      console.log(dev+(alias?':'+alias:''),details.address);
      ++alias;
    }
  });
}




Replication:
GObj:
-copyfrom()//chain
-clone(){ret create().copyfrom(this)}
-setdirty(){listadd,noflag?}
-netgroups
Class ser schema //static
//schema var condition
Class (reg?):
-instances{}
-netDirty{}
-new{}
NetUd:
-Forall netgroups?
-Forall classes
--forall new
---ser complete
--forall dirty
---ser dirty
-clear dirty/new
NetNewCon:
-forall classes
--forall inst
---ser complete
*********
ud
x	dirty->
x	new->
connect
x	all->
disconnect
o	server delete->
******



User=>netuser
Name/id/srverid
Discon timeout (sys var)
Get rid of ser 'scope'
Obj.clonedFrom

Arithmetic adaption!
Sim latency
Srvr Destroylist
Clone? (class of preconfigured)
Srvr create list (clone data)

NEXT TIME:
Object refactor (ser bool when dummy)
User id issue
Bitpack bin/string