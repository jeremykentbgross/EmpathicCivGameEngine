GameNetwork
	-client/Server
	-main bit...


user
	name : guest	//observer
	access : no
user
	name : server
	access : all
user
	name : expected123
	access : expected123
	if(discon > timeout)
		rm?
	else
		relink
		
ping?

GO
	netowner

unpack
	throw	//from logerror



/////////////////////////////////////////
/////////////////////////////////////////

GameInstance.localUser =
{
	name : isServer ? "Server" : int.random().toString();
}


//client side
OnConnect()
	send: 'userID', GameInstance.localUser.name;
	socket.user = new User("server");



//server side:
GameInstance.expectedUsers //sent from login or other server(s)
	
OnUserID(id)
{
	if(Globals.expectedOnlyList)
	{
		if(!expected)
		{
			disconnect
			return;
		}
	}
	if(this.users[id] && this.users[id].socket)
	{
		//already connected error
		disconnect
		return;
	}
	if(this.users[id] === null)
		this.users[id] = new User(name);//contains ping etc
	
	this.users[id].socket = socket;
	socket.user = this.users[id];
}
	
OnDisconnect()
	socket.user.socket = null;
	
OnData/Msg()
	if(socket.user === null)
		drop em!
		
Serialize()
{
	for numObjects
		get object header
		find object
		if(object.owner === source || source === server)
			serialize
		else
			dummy serialize
			check recent owners
}

//TODO how to setowner

User
-name (reflect)
-publicid ("")
-privateid

Net err (wrong user, not identifird user)

Socketio use websockets or flash, no polling.

Ws.js

User.netiopolicy =
{
connect()
reconnect()
update()
//example: owned objs, world, visible in world, less frequent@distance, etc
}



======>Object netdirty, owner
//TODO skip objects we do not own (but queue owner changes in netserialize queue from object?)
//TODO serialize all objects on start